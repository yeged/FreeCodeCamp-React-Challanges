
const App = () => {

  const [input, setInput] = React.useState(placeholder)

  const onChange = (e) => {
    setInput(e.target.value)
  }

  return (
    <div className="container">
        <Editor value={input} onChange={onChange} />
        <Preview source={input}/>
    </div>)

}

const Editor = (props) => {
  return (
    <div className="editorContainer">
      <h1>Markdown Editor</h1>
      <textarea
        id="editor"
        autofocus
        className="textarea"
        value={props.value}
        onChange={props.onChange}
      />
    </div>
  )
}

const Preview = (props) => {
  return (
    <div className="previewContainer" >
      <h1>Previewer</h1>
      <div id="preview">
        <ReactMarkdown source={props.source} className="line-break" />
      </div>
    </div>
  )
}

const placeholder = `# Welcome to my React Markdown Previewer!

## This is a sub-heading...
### And here's some other cool stuff:

Heres some code, \`<div></div>\`, between 2 backticks.

\`\`\`
// this is multi-line code:

function anotherExample(firstLine, lastLine) {
  if (firstLine == '\`\`\`' && lastLine == '\`\`\`') {
    return multiLineCode;
  }
}
\`\`\`

You can also make text **bold**... whoa!
Or _italic_.
Or... wait for it... **_both!_**
And feel free to go crazy ~~crossing stuff out~~.

There's also [links](https://www.freecodecamp.com), and
> Block Quotes!

And if you want to get really crazy, even tables:

Wild Header | Crazy Header | Another Header?
------------ | ------------- | -------------
Your content can | be here, and it | can be here....
And here. | Okay. | I think we get it.

- And of course there are lists.
  - Some are bulleted.
     - With different indentation levels.
        - That look like this.


1. And there are numbererd lists too.
1. Use just 1s if you want!
1. And last but not least, let's not forget embedded images:

![React Logo w/ Text](https://goo.gl/Umyytc)
`;


ReactDOM.render(<App />, document.getElementById('app'));